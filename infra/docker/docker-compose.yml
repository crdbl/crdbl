services:
  redis:
    image: redis:8-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes # AOF persistence
    volumes:
      - ./data/redis:/data
    ports: ['6379:6379']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  ipfs:
    image: ipfs/kubo:latest
    restart: unless-stopped
    environment:
      IPFS_PROFILE: server
    volumes:
      - ./data/ipfs:/data/ipfs
    ports:
      - '5001:5001' # API
      - '8080:8080' # Gateway
      - '4001:4001' # Swarm (tcp)
      - '4001:4001/udp'
    healthcheck:
      test: ['CMD', 'ipfs', 'id']
      interval: 10s
      timeout: 10s
      retries: 5

  api:
    image: 'crdbl/api:latest'
    profiles: ['production']
    build:
      context: ../..
      dockerfile: ./apps/api/Dockerfile
    restart: unless-stopped
    env_file:
      - ../../apps/api/.env
    environment:
      NODE_ENV: production
      IPFS_URL: 'http://ipfs:5001'
      REDIS_URL: 'redis://redis:6379'
    ports:
      - 3001:3001
    depends_on:
      redis: { condition: service_healthy }
      ipfs: { condition: service_healthy }
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:3001/health']
      interval: 10s
      timeout: 5s
      retries: 5
